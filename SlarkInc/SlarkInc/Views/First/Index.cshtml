@{
    ViewBag.Title = "Index";
    Layout = null;
}

<h2>Index</h2>

<p>Number: @ViewBag.Number</p>
<p>Message: @ViewBag.Message</p>
@{
    foreach (string slark in ViewBag.Slarks)
    {
        <p>@slark</p>
    }
}
<hr/>

<div>
    <!--Single Line-->
    @{ var name = "Slark";}
    @{ Response.Write("Single Line : Name is" + name + "<br />");}

    <!--Inline-->
    Inline : Today is:@DateTime.Now.ToString("yyyy-MM-dd") <br/>
    Inline : Name is @name <br/>

    <!--Multi-Line-->
    @{
        var age = 25;
        Response.Write("Multi-Line : Age is " + age + "<br />");
    }
</div>
<p>
    服务器在这个文件中逐行搜寻Razor标记中的C#代码，如果读到的是C#单行或多行代码，就执行它。执行后输出的结果就是上面代码中绿色的部分。如果搜寻到了行内代码，就把这一段代码替换成代码对应的值，对应上面代码中黄色部分。这样把这个文件处理一遍之后。
</p>
<hr/>
@{
    var name1 = "Slark";
    <p>var name2 = "Slark";</p>
    @:var name3 = "Slark";<br />
    <text>
        var name4 = "Slark";<br />
        var name5 = "Slark";
    </text>
}

<p>
    一般情况下，@@{}中的代码只被当作C#代码运行。而上面代码中只有name1被当作C#代码处理而其他几行都被当作文本输出了。

    之前的内容都是介绍怎么在html文件中嵌入服务器代码，现在来介绍怎么在服务器代码里嵌入html代码...

    如上面代码中所示，一共三种方法：

    在Razor标记的代码中如果有成对的html标记，则这个标记及其内容会被当作普通文本输出。如上面的
<p>var name2 = "Slark";</p>
在Razor标记的代码中如果有"@@:"，则其后的一行代码会被当作普通文本输出。如上面的 @@:var name3 = "Slark";<br />
在Razor标记的代码中如果有<text>...</text>标记，则其内容会被当作普通文本输出。如上面的 <text> var name4 = "Slark";<br /> var name5 = "Slark"; </text>
</p>
